import type { Unrecognized } from "../../../utils/unrecognized.js";
import { PlatformError } from "../PlatformError.js";
import type { B2bExternalServiceError } from "../../platform/company/B2bExternalServiceError.js";
import type { B2bNotEnabledError } from "../../platform/company/B2bNotEnabledError.js";
import type { ForbiddenError } from "../../common/ForbiddenError.js";
import type { InvalidRequestError } from "../../common/InvalidRequestError.js";
import type { PlatformCompanyNotFoundError } from "../../platform/company/PlatformCompanyNotFoundError.js";
import type { PlatformExternalApiFailedError } from "../../platform/PlatformExternalApiFailedError.js";
import type { PlatformNotEnabledError } from "../../platform/PlatformNotEnabledError.js";
import type { UnauthorizedError } from "../../common/UnauthorizedError.js";
export declare abstract class CompanyError extends PlatformError {
    readonly data: B2bExternalServiceError | B2bNotEnabledError | ForbiddenError | InvalidRequestError | PlatformCompanyNotFoundError | PlatformExternalApiFailedError | PlatformNotEnabledError | UnauthorizedError | {
        readonly type: Unrecognized;
    };
}
